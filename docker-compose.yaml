services:
  db:
    image: postgres
    container_name: booking_db
    env_file:
      - .env-non-dev
    ports:
      - 6666:5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis
    container_name: booking_redis

  booking:
    build:
      context: .
    container_name: booking_app
    env_file:
      - .env-non-dev
    depends_on:
      db:
        condition: service_healthy # Ждём, пока PostgreSQL будет готов
      redis:
        condition: service_started
    command: [ "/booking/docker/app.sh" ]
    ports:
      - 7777:8000

  celery:
    build:
      context: .
    container_name: booking_celery
    command: [ "/booking/docker/celery.sh", "celery" ]
    env_file:
      - .env-non-dev
    depends_on:
      - redis

  flower:
    build:
      context: .
    container_name: booking_flower
    command: [ "/booking/docker/celery.sh", "flower" ]
    env_file:
      - .env-non-dev
    depends_on:
      - redis

  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheusdata:/prometheus
    restart: unless-stopped
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    volumes:
      - grafana:/var/lib/grafana
    restart: unless-stopped
    ports:
      - 3000:3000

volumes:
  postgresdata:
  grafanadata:
  prometheusdata:
  grafana:
